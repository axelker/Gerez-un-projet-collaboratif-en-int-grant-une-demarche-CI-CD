name: Backend CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-test:
    name: "Build and Test"
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."

      - name: Set up Java JDK
        uses: actions/setup-java@v4
        with:
          java-version: "11"
          distribution: "temurin"
          cache: "maven"

      - name: Install dependencies
        run: |
          cd back
          mvn clean install

      - name: Test
        run: |
          cd back
          mvn clean test

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: jacoco-coverage-result
          path: ./back/target/site/jacoco

  code-quality-check:
    name: Code quality check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java JDK
        uses: actions/setup-java@v4
        with:
          java-version: "11"
          distribution: "temurin"

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze code
        working-directory: ./back
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: >
            mvn -B verify
            org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
            -Dsonar.projectVersion=${GITHUB_RUN_NUMBER}
            -Dsonar.projectKey=axelker_bobapp-application
            -Dsonar.qualitygate.wait=true


  build-and-publish-docker-image:
    name: Build And Publish docker image
    runs-on: ubuntu-latest
    needs: [build-and-test, code-quality-check]
    timeout-minutes: 10

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
  
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
 
    - name: Publish docker image
      run: |
          cd back
          docker build -t bobapp-back .
          docker tag bobapp-back ${{ secrets.DOCKERHUB_USERNAME }}/bobapp-back:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/bobapp-back:latest
