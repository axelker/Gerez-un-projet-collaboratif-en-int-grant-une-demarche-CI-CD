name: Frontend CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:

  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
    
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "16"

      - name: Install dependencies
        run: |
          cd front
          npm ci

      - name: Build
        run: |
          cd front
          npm run build

      - name: Test
        run: |
          cd front
          npm test -- --browsers=ChromeHeadless

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: karma-coverage-result
          path: ./front/coverage/bobapp
  
  
  code-quality-check:
    name: Code quality check
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "16"
        
      - name: Build and test
        run: |
          cd front
          npm ci
          npm run build
          npm test -- --browsers=ChromeHeadless

      - name: SonarCloud Analyze code
        uses: SonarSource/sonarcloud-github-action@v5.0.0
        with:
          projectBaseDir: front
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build-and-publish-docker-image:
    name: Build And Publish docker image
    runs-on: ubuntu-latest
    needs: [build-and-test, code-quality-check]
    timeout-minutes: 10

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - run: echo "The ${{ github.repository }} repository has been cloned to the runner."

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Publish docker image
      run: |
          cd front
          docker build -t bobapp-front .
          docker tag bobapp-front ${{ secrets.DOCKERHUB_USERNAME }}/bobapp-front:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/bobapp-front:latest